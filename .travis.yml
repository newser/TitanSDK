language: c

addons:
    apt:
        sources:
            - george-edison55-precise-backports
        packages:
            - cmake-data
            - cmake

matrix:
    include:
        - os: linux
          dist: precise
          env:
              global:
                  - JOB=precise
                  - GENERATOR='Unix Makefiles'
                  - CMAKE_FLAGS='-DPLATFORM_BUILD_SHARED=TRUE -DPLATFORM_ENABLE_DEBUG=FALSE'
                  - BUILD_TYPE=Debug
                  - UT=unit_test/unit_test
        - os: linux
          dist: trusty
          env:
              global:
                  - JOB=trusty
                  - GENERATOR='Unix Makefiles'
                  - CMAKE_FLAGS='-DPLATFORM_BUILD_SHARED=TRUE -DPLATFORM_ENABLE_DEBUG=TRUE'
                  - BUILD_TYPE=Release
                  - UT=unit_test/unit_test
        - os: osx
          osx_image: xcode7.3.1
          env: JOB=xcode7 GENERATOR=Xcode BUILD_CMD="xcodebuild -target generate_header"
          env:
              global:
                  - JOB=xcode7
                  - GENERATOR=Xcode
                  - CMAKE_FLAGS='-DPLATFORM_BUILD_SHARED=FALSE -DPLATFORM_ENABLE_DEBUG=FALSE'
                  - BUILD_TYPE=Debug
                  - UT=unit_test/Debug/unit_test
        - os: osx
          osx_image: xcode8.3
          env:
              global:
                  - JOB=xcode8
                  - GENERATOR=Xcode
                  - CMAKE_FLAGS='-DPLATFORM_BUILD_SHARED=FALSE -DPLATFORM_ENABLE_DEBUG=TRUE'
                  - BUILD_TYPE=Release
                  - UT=unit_test/Release/unit_test
        - os: osx
          osx_image: xcode9
          env:
              global:
                  - JOB=xcode9
                  - GENERATOR=Xcode
                  - CMAKE_FLAGS='-DPLATFORM_BUILD_SHARED=TRUE -DPLATFORM_ENABLE_DEBUG=FALSE'
                  - BUILD_TYPE=Debug
                  - UT=unit_test/Debug/unit_test

install:
    - mkdir titansdk_BUILD_CMD_${JOB}
    - cd titansdk_BUILD_CMD_${JOB}
    - cmake -G "${GENERATOR}" ${CMAKE_FLAGS} ..
    - cmake --build . --target unit_test --config ${BUILD_TYPE}
    - ${BUILD_CMD}

script:
    - echo start unit test
    - export TT_CASE=case_log_context; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_log_manager; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_lpatn_sn; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_lpatn_time; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_lpatn_logger; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_lpatn_content; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_lpatn_func; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_lpatn_line; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_log_pattern; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_mutex_basic; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_mutex_mt; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_atomic_basic; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_atomic_mt; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_atomic_cas; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_atomic_ptr; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_atomic_fence; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_spin_lock_basic_mp; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_spin_lock_basic_sp; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_spin_lock_mt; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_rwlock_basic; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_rwlock_mt; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_thread_basic; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_thread_sleep; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_thread_rand; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_dll; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_process_basic; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_fiber_basic; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_fiber_3fibers; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_fiber_sanity; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_fiber_sanity2; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_worker_group; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_task; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_fiber_event; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_sem_basic; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_sem_mt; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_sem_pc; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_sem_count; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_slab_cd; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_slab_allocfree; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_mempool_basic; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_mempool_alloc_free; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_mempool_sanity; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_mem_spg; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_mem_page; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_time_abs_basic; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_date_def; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_date_render; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_date_parse; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_tmr_basic; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_tmr_fiber; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_tmr_accuracy; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_tmr_stable; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_version; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_high_bit_1; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_low_bit_1; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_base64_dec; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_der_enc; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_strtol; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_c2h; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_align; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_charset_gb2312_utf8; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_charset_utf16le_utf8; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_charset_utf16be_utf8; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_charset_utf32le_utf8; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_charset_utf32be_utf8; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_charset_utf8; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_clinode; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_cfgnode_u32; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_cfgnode_s32; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_cfgnode_str; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_cfgnode_dir; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_cfgnode_grp_ar; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_cfgnode_bool; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_cfgpath_p2n_abs; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_cfgpath_p2n_rel; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_cfgpath_p2n_dot; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_cfgpath_n2p; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_cfgpath_comp; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_cfgsh_parse_arg; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_cfgsh_ls; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_cfgsh_help; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_cfgsh_pwd; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_cfgsh_cd; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_cfgsh_get; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_cfgsh_set; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_cfgsh_quit; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_cfgsh_exec; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_fs_basic; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_fs_open; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_fs_rw; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_dir_basic; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_fs_multhread; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_fs_consistency; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_ipc_basic; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_ipc_client; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_ipc_stress; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_ipc_fiber_ev; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_ipc_ev; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_sk_addr; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_sk_opt; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_bind_basic; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_tcp_basic; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_udp_basic; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_tcp6_close; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_tcp4_stress; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_tcp_event; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_udp_event; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_basic_alg_qsort; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_basic_alg_qsort_random; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_basic_alg_bsearch; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_basic_alg_min_larger; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_basic_alg_max_less; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_alg_rng; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_ptrheap_basic; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_ptrheap_correct; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_ptrheap_perf; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_vector; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_ptr_vector; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_list; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_dl_list; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_sl_list; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_hash; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_map_basic; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_map_share_key; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_ptrmap; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_queue; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_ptr_queue; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_rbtree; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_stack; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_ptr_stack; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_rbuf; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_rbuf_stress; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_rbuf_excep; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_wbuf; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_rwbuf; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_rwbuf_raw; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_buf_null; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_buf_get_basic; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_buf_get_rand; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_buf_put_basic; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_buf_put_rand; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_buf_remove; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_buf_get_hexstr; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_buftok; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_blob; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_str_null; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_str_basic; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_str_getchar; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_str_cmp; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_str_copy_swap; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_str_find; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_str_join; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_str_case; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_str_insert; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_dns_query_basic; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_dns_query_u2t; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_dns_query_timeout; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_dns_query_exception; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_dns_query4_first6; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_dns_query6_first4; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_dns_rr_a; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_dns_rr_aaaa; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_dns_parse_a; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_dns_parse_aaaa; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_dc_basic; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_dc_get_a; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_dc_get_aaaa; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_dc_exception; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_x509_cert; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_x509_crl; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_ssl_basic; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_ssl_ver; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_ssl_auth; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_ssl_alpn; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_ssl_resume; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_ssl_ticket; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_ssl_multhread; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_cipher; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_md; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_hmac; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_crypto_ecdh; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_crypto_ecdsa; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_rsa_encrypt; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_rsa_sign; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_rsa_gen; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_dh; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_entropy; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_ctr_drbg; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_xdoc_encoding; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_xdoc_parse; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_xdoc_render; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_xattr_rel; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_xattr_bool; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_xattr_int; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_xnode_bool; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_xnode_int; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_xnode_rel; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_xpath_node; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_xpath_attr; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_xpath_eval; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_xpath_xpvar; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_cli_line; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_cli_line_stress; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_cli_line_cursor; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_cli; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_cli_stress; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_cli_ac; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
    - export TT_CASE=case_cli_readline; echo testing ${TT_CASE}; ${UT} > ${TT_CASE}.log 2>&1; if [ $? -ne 0 ]; then cat ${TT_CASE}.log; (exit -1); fi
