matrix:
    include:
        - language: c
          os: linux
          dist: trusty
          env:
              global:
                  - JOB='Android 21'
                  - OS=android

before_install:
    - |
      if [ "${OS}" == "android" ]
      then
          wget -q cmake-3.9.1-Linux-x86_64.sh && \
          sh cmake-3.9.1-Linux-x86_64.sh || \
          exit -1
          PATH=$(pwd)/cmake-3.9.1-Linux-x86_64/bin:${PATH}
          cmake --version

          export NDK=android-ndk-r14b
          wget -q https://dl.google.com/android/repository/${NDK}-linux-x86_64.zip && \
          unzip -oqq ${NDK}-linux-x86_64.zip || \
          exit -1
          
          function android_compile {
              echo "set(CMAKE_SYSTEM_NAME Android)" > toolchain.cmake &&
              echo "set(CMAKE_SYSTEM_VERSION $1)" >> toolchain.cmake &&
              echo "set(CMAKE_ANDROID_ARCH_ABI $2)" >> toolchain.cmake &&
              echo "set(CMAKE_ANDROID_NDK \"$(pwd)/${NDK}\")" >> toolchain.cmake
              
              mkdir titansdk_build
              cd titansdk_build
              cmake -G "Unix Makefiles" -DCMAKE_TOOLCHAIN_FILE=toolchain.cmake $3 .. && \
              cmake --build . --target platform --config $4 && \
              cd .. && \
              rm -rf titansdk_build || \
              return -1
              
              return 0
          }
          
          echo ====================================
          echo android: 21
          echo abi: x86
          echo ====================================          
          android_compile 21 x86 "-DPLATFORM_BUILD_SHARED=FALSE -DPLATFORM_ENABLE_DEBUG=TRUE" Debug
      fi

install:
    - if [ "${OS}" == "android" ]; then exit 0; fi
    - mkdir titansdk_build
    - cd titansdk_build
    - cmake -G "${GENERATOR}" ${CMAKE_FLAGS} ..
    - |
      if [ ! -z "${CMAKE_FLAGS2}" ]
      then
          cmake -G "${GENERATOR}" ${CMAKE_FLAGS2} ..
      fi
    - ${BUILD_CMD}
    - |
      if [ ${OS} == "ios-simulator" ]
      then
          export DEV=$(xcrun simctl create test_iphone7 com.apple.CoreSimulator.SimDeviceType.iPhone-7 com.apple.CoreSimulator.SimRuntime.iOS-10-3) && \
          xcrun simctl boot ${DEV} && \
          xcrun simctl install ${DEV} ${UT}
      fi

script:
    - echo android done